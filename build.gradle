apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'propdeps'
apply plugin: 'propdeps-eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    repositories {
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.6'
    }
}

group = 'com.msiops.jaxrs'
version = '1.0.0'

description = """JAXRS :: Configure and enforce trailing-slash policy for resources"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
  provided
}

dependencies {
  provided "javax.annotation:javax.annotation-api:1.2"
  provided "javax.ws.rs:javax.ws.rs-api:2.0"

  testCompile 'org.glassfish.jersey.core:jersey-common:2.9.1' // for unit tests
  testCompile 'org.glassfish.jersey.containers:jersey-container-jdk-http:2.9.1'	// server for functional tests

  testCompile "junit:junit:4.11"
  testCompile "org.mockito:mockito-core:1.9.5"
}

repositories {
  mavenCentral()
}

eclipse {
  project {
    name = 'com.msiops.jaxrs.jaxrs-trailing-slash'
  }
}

/*
TODO make this work.  I want to differentiate between unit
and functional tests. But as soon as I add this code
(or corresponding code using JUnit categories), parameterized
tests are no longer in the build.

I have filed a problem report with Gradle and am awaiting
a response.

test {
  filter {
    includeTestsMatching "unit.*"
  }
}

task funTest(type: Test) {
  filter {
    includeTestsMatching "fun.*"
  }
}
funTest.dependsOn test
*/


task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives jar

  archives javadocJar
  archives sourcesJar
}

signing {
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }

      pom.project {
        name 'GradleFx'
        packaging 'jar'
        description 'GradleFx is a Gradle plugin for building Flex and Actionscript applications'
        url 'http://gradlefx.github.com/'

        scm {
          url 'scm:git@github.com:GradleFx/GradleFx.git'
          connection 'scm:git@github.com:GradleFx/GradleFx.git'
          developerConnection 'scm:git@github.com:GradleFx/GradleFx.git'
        }

        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id 'aztecrex'
            name 'Greg Wiley'
          }
        }
      }
    }
  }
}






